package transfusionsanguine;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author DELL
 */
public class transfusang extends javax.swing.JFrame {
    int k;
    Connection conn ;
    PreparedStatement pst,pst2,pst3,pstsel,pstsel1;
     ResultSet rs,rssel,rssel1;
  
  
    public transfusang() {
        initComponents();
        conn = Transfusion.conn();
        jMenu7.setText(login1.username);
        afficher(declaration.idpatient.getText(),declaration.episode.getText());
        pa.setText(declaration.idpatient.getText());
        ep.setText(declaration.episode.getText());
        
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        fcontrole = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        vol = new javax.swing.JTextField();
        indi = new javax.swing.JTextField();
        transfu = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        ets = new javax.swing.JTextField();
        prod = new javax.swing.JTextField();
        num = new javax.swing.JTextField();
        gpe = new javax.swing.JTextField();
        impu = new javax.swing.JComboBox<>();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        auto = new javax.swing.JCheckBox();
        jToggleButton3 = new javax.swing.JToggleButton();
        datee = new com.toedter.calendar.JDateChooser();
        jLabel44 = new javax.swing.JLabel();
        heure = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        pa = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        ep = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        fcontrole.setBackground(new java.awt.Color(204, 228, 232));
        fcontrole.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Microsoft Himalaya", 1, 35)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Transfusion sanguine :");
        fcontrole.add(jLabel1);
        jLabel1.setBounds(30, 40, 310, 38);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Volume transfusé :");
        fcontrole.add(jLabel2);
        jLabel2.setBounds(830, 150, 140, 30);

        jLabel34.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel34.setText(" heure de la transfusion ");
        fcontrole.add(jLabel34);
        jLabel34.setBounds(480, 150, 180, 30);

        jLabel35.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel35.setText("Produit(s) sanguin(s) susceptible(s) d'avoir causé l'incident transfusionnel");
        fcontrole.add(jLabel35);
        jLabel35.setBounds(40, 320, 570, 19);

        jLabel36.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel36.setText("autologue ");
        fcontrole.add(jLabel36);
        jLabel36.setBounds(490, 200, 80, 19);

        jLabel37.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel37.setText("Transfusion sanguine :");
        fcontrole.add(jLabel37);
        jLabel37.setBounds(60, 200, 180, 30);
        fcontrole.add(vol);
        vol.setBounds(970, 150, 80, 29);

        indi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indiActionPerformed(evt);
            }
        });
        fcontrole.add(indi);
        indi.setBounds(300, 250, 130, 29);
        fcontrole.add(transfu);
        transfu.setBounds(300, 200, 130, 29);

        jLabel38.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("Imputabilité de l'incident ");
        fcontrole.add(jLabel38);
        jLabel38.setBounds(970, 380, 200, 19);

        jLabel39.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel39.setText("Indication (s) de la transfusion ");
        fcontrole.add(jLabel39);
        jLabel39.setBounds(60, 250, 240, 30);

        jLabel40.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("Nature du produit ");
        fcontrole.add(jLabel40);
        jLabel40.setBounds(90, 380, 200, 19);

        jLabel41.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("Numéro de poche ");
        fcontrole.add(jLabel41);
        jLabel41.setBounds(300, 380, 200, 19);

        jLabel42.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("Groupe sanguin");
        fcontrole.add(jLabel42);
        jLabel42.setBounds(530, 380, 190, 19);

        jLabel43.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("ETS producteur ");
        fcontrole.add(jLabel43);
        jLabel43.setBounds(750, 380, 200, 19);
        fcontrole.add(ets);
        ets.setBounds(780, 410, 140, 29);
        fcontrole.add(prod);
        prod.setBounds(120, 410, 140, 29);
        fcontrole.add(num);
        num.setBounds(330, 410, 140, 29);
        fcontrole.add(gpe);
        gpe.setBounds(560, 410, 140, 29);

        impu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "douteuse ", "possible", "vraisemblable", "certaine" }));
        fcontrole.add(impu);
        impu.setBounds(1000, 410, 140, 29);

        jToggleButton1.setText("Supprimer");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        fcontrole.add(jToggleButton1);
        jToggleButton1.setBounds(1310, 490, 111, 60);

        jToggleButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jToggleButton2.setText("Enregistrer ");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        fcontrole.add(jToggleButton2);
        jToggleButton2.setBounds(1260, 800, 170, 60);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nature du produit ", "Numéro de poche", "Groupe sanguin ", "ETS producteur ", "Imputabilité de l'incident"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        fcontrole.add(jScrollPane1);
        jScrollPane1.setBounds(70, 490, 1110, 240);
        fcontrole.add(auto);
        auto.setBounds(570, 200, 30, 25);

        jToggleButton3.setText("Ajouter");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        fcontrole.add(jToggleButton3);
        jToggleButton3.setBounds(1200, 490, 111, 60);
        fcontrole.add(datee);
        datee.setBounds(300, 150, 130, 29);

        jLabel44.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel44.setText("Date de la transfusion ");
        fcontrole.add(jLabel44);
        jLabel44.setBounds(60, 150, 240, 30);
        fcontrole.add(heure);
        heure.setBounds(660, 150, 110, 29);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel3.setText("Patient:");
        fcontrole.add(jLabel3);
        jLabel3.setBounds(1150, 50, 60, 21);

        pa.setText("jLabel4");
        fcontrole.add(pa);
        pa.setBounds(1220, 50, 110, 20);

        jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel30.setText("Episode:");
        fcontrole.add(jLabel30);
        jLabel30.setBounds(1330, 50, 60, 21);

        ep.setText("jLabel5");
        fcontrole.add(ep);
        ep.setBounds(1400, 50, 100, 21);

        jMenu5.setText("Quitter");
        jMenu5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenu5.setMargin(new java.awt.Insets(5, 6, 5, 10));
        jMenu5.setMaximumSize(new java.awt.Dimension(600, 32767));
        jMenu5.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                jMenu5MenuSelected(evt);
            }
        });
        jMenuBar1.add(jMenu5);

        jMenu8.setText("Utilisateur :");
        jMenu8.setEnabled(false);
        jMenu8.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuBar1.add(jMenu8);

        jMenu7.setText("jMenu7");
        jMenu7.setEnabled(false);
        jMenu7.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenu7.setMargin(new java.awt.Insets(3, 6, 3, 5));
        jMenu7.setMaximumSize(new java.awt.Dimension(500, 32767));
        jMenuBar1.add(jMenu7);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fcontrole, javax.swing.GroupLayout.DEFAULT_SIZE, 1536, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fcontrole, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     private void afficher(String id,String ep){
         try {
          String sqlsel = "select * from Transfusiondec where idpatient=? and episode=? ";
         pstsel = conn.prepareStatement(sqlsel);
         pstsel.setString(1, id);
        pstsel.setString(2, ep);
        rssel = pstsel.executeQuery();
        if (rssel.next()) {
        String dateStr = rssel.getString("Datetrans");
        DateFormat datef = new SimpleDateFormat("dd/MM/yyyy");
        Date d = datef.parse(dateStr);
        datee.setDate(d);
        heure.setText(rssel.getString("HeureTrans"));
        transfu.setText(rssel.getString("Transfusion"));
        if ("Oui".equals(rssel.getString("Autologue"))) {
            auto.setSelected(true);
        }
      vol.setText(rssel.getString("Volume"));
        indi.setText(rssel.getString("Indication"));
    }
       } catch (SQLException e) {
      JOptionPane.showMessageDialog(null, e);
     } catch (ParseException ex) {
    Logger.getLogger(episode.class.getName()).log(Level.SEVERE, null, ex);
     }

    try {
    String sqlsel1 = "select * from Produitsang where idpatient=? and episode=? ";
    pstsel1 = conn.prepareStatement(sqlsel1);
    pstsel1.setString(1,id);
    pstsel1.setString(2,ep);
    rssel1 = pstsel1.executeQuery();
    String[] T = new String[5];
    DefaultTableModel model = (DefaultTableModel) transfusang.jTable1.getModel();
    while (rssel1.next()) {
        T[0] = rssel1.getString("NatureProduit");
        T[1] = rssel1.getString("NumPoche");
        T[2] = rssel1.getString("GroupeSang");
        T[3] = rssel1.getString("ETS");
        T[4] = rssel1.getString("Imputabilitee");
        
        model.addRow(T);
    }
    } catch (SQLException e) {
    JOptionPane.showMessageDialog(null, e);
     }
     }
     
     

     
     
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        int r=jTable1.getSelectedRow();
        model.removeRow(r);
    }//GEN-LAST:event_jToggleButton1ActionPerformed
    public void insert(){
       DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
       Date date = datee.getDate();
       SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy ");
       String date1= f.format(date);
       String transfusion=transfu.getText();
       String autolo;
       String volume=vol.getText();
       String indication=indi.getText();
       String heuret=heure.getText();
       if(auto.isSelected()){
           autolo="Oui";
       }
       else {autolo="Non";}
         try{
          String sql ="insert into Transfusiondec (Datetrans,Transfusion,Autologue,Volume,Indication,idpatient,episode,HeureTrans) values (?,?,?,?,?,?,?,?) ";
          pst = conn.prepareStatement(sql);
          pst.setString(1,date1);
          pst.setString(2,transfusion);
          pst.setString(3,autolo);
          pst.setString(4,volume);
          pst.setString(5,indication);
          pst.setString(6,declaration.idpatient.getText());
          pst.setString(7,declaration.episode.getText());
          pst.setString(8,heuret);
          pst.execute();
         
          
              JOptionPane.showMessageDialog(null,"enregistrement effectué avec succés");
     
       }     
       catch(SQLException e){
               JOptionPane.showMessageDialog(null,e);
                  }
        try {
    String sql2 = "insert into Produitsang (NatureProduit,NumPoche,GroupeSang,ETS,Imputabilitee,idpatient,episode) values(?, ?, ?, ?,?,?,?)";
     pst2 = conn.prepareStatement(sql2);

    for (int i = 0; i < model.getRowCount(); i++) {
        pst2.setString(1, model.getValueAt(i, 0).toString());
        pst2.setString(2, model.getValueAt(i, 1).toString());
        pst2.setString(3, model.getValueAt(i, 2).toString());
        pst2.setString(4, model.getValueAt(i, 3).toString());
        pst2.setString(5, model.getValueAt(i, 4).toString());
        pst2.setString(6, declaration.idpatient.getText());
        pst2.setString(7, declaration.episode.getText());
        pst2.addBatch(); 
    }

    pst2.executeBatch();
    JOptionPane.showMessageDialog(null, "Enregistrement effectué avec succès");
} catch (SQLException ex) {
    Logger.getLogger(controle.class.getName()).log(Level.SEVERE, null, ex);
}

    }
    
    
    
  public void update(){
       DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
       Date date = datee.getDate();
       SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy ");
       String date1= f.format(date);
       String transfusion=transfu.getText();
       String autolo;
       String volume=vol.getText();
       String indication=indi.getText();
       if(auto.isSelected()){
           autolo="Oui";
       }
       else {autolo="Non";}
         try{
          String sql ="update Transfusiondec set Datetrans=?,Transfusion=?,Autologue=?,Volume=?,Indication=? HeureTrans=?";
          pst = conn.prepareStatement(sql);
          pst.setString(1,date1);
          pst.setString(2,transfusion);
          pst.setString(3,autolo);
          pst.setString(4,volume);
          pst.setString(5,indication);
          pst.setString(5,heure.getText());
          pst.execute();
         
          
              JOptionPane.showMessageDialog(null,"enregistrement effectué avec succés");
     
       }     
       catch(SQLException e){
               JOptionPane.showMessageDialog(null,e);
         }
         
         
        try {
       String sql3 = "DELETE FROM Produitsang WHERE idpatient=? and episode=?";  
       pst3 = conn.prepareStatement(sql3);
       pst3.setString(1, declaration.idpatient.getText());
       pst3.setString(2, declaration.episode.getText());
       int rowsAffected = pst3.executeUpdate(); 
       if (rowsAffected > 0) {
        System.out.println("Deletion successful");
       } else {
        System.out.println("No rows deleted");
       }
      } catch (SQLException ex) {
      Logger.getLogger(controle.class.getName()).log(Level.SEVERE, null, ex);
            } 
        try {
      String sql2 = "insert into Produitsang (NatureProduit,NumPoche,GroupeSang,ETS,Imputabilitee,idpatient,episode) values(?,?,?, ?, ?, ?,?)";
      pst2 = conn.prepareStatement(sql2);

      for (int i = 0; i < model.getRowCount(); i++) {
        pst2.setString(1, model.getValueAt(i, 0).toString());
        pst2.setString(2, model.getValueAt(i, 1).toString());
        pst2.setString(3, model.getValueAt(i, 2).toString());
        pst2.setString(4, model.getValueAt(i, 3).toString());
        pst2.setString(5, model.getValueAt(i, 4).toString());
        pst2.setString(6, declaration.idpatient.getText());
        pst2.setString(7, declaration.episode.getText());
        pst2.addBatch(); 
    }

    pst2.executeBatch();
    JOptionPane.showMessageDialog(null, "Enregistrement effectué avec succès");
} catch (SQLException ex) {
    Logger.getLogger(controle.class.getName()).log(Level.SEVERE, null, ex);
}

  
  
  
  
  
  
  
  
  
  }
    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        if(datee.getDate()==null){JOptionPane.showMessageDialog(null,"Date de la transfusion non rempli !!!");}
        else if(heure.getText().trim().isEmpty()){JOptionPane.showMessageDialog(null," heure de la transfusion non rempli !!!");}
        else if(transfu.getText().trim().isEmpty()){JOptionPane.showMessageDialog(null,"Transfusion sanguine non rempli !!!");}
        else if(vol.getText().trim().isEmpty()){JOptionPane.showMessageDialog(null,"Volume transfusé non rempli !!!");}
        else if(indi.getText().trim().isEmpty()){JOptionPane.showMessageDialog(null,"Indication (s) de la transfusion  non rempli !!!");}
        else  if (jTable1.getModel().getRowCount()==0){JOptionPane.showMessageDialog(null,"Table non remplie!!!");}
        else{
        try{
          String sqlsel ="select * from Transfusiondec where idpatient= ? and episode=?";
          pstsel = conn.prepareStatement(sqlsel);
          pstsel.setString(1,declaration.idpatient.getText());
          pstsel.setString(2,declaration.episode.getText());
          rs=pstsel.executeQuery();
         
          if(!rs.next()){insert();}
          else{
      
              
              update();
      
          }
          
          
          
          
         }
        catch(SQLException e){
               JOptionPane.showMessageDialog(null,e);
                  }  }
    }//GEN-LAST:event_jToggleButton2ActionPerformed
    private void updatetable(){
      int i=jTable1.getSelectedRow();
      DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
      if(i>=0){
        model.setValueAt(prod.getText(), i, 0);
        model.setValueAt(num.getText(), i, 1);      
        model.setValueAt(gpe.getText(),i,2);
        model.setValueAt(ets.getText(), i, 3);
        model.setValueAt(impu.getSelectedItem(),i,4);
        
      }else{ JOptionPane.showMessageDialog(null,"Error");
     }
     
     }
    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
       DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
       if(k==1){
          updatetable();
          k=0;
          }
        else{
        model.addRow(new Object[]{prod.getText(),num.getText(),gpe.getText(),ets.getText(),impu.getSelectedItem()});
        prod.setText("");
        num.setText("");
        gpe.setText("");
        ets.setText("");}
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jMenu5MenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_jMenu5MenuSelected
        declaration d=new declaration();
        d.setVisible(true);
        this.hide();
    }//GEN-LAST:event_jMenu5MenuSelected

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       int selectedrow=jTable1.getSelectedRow();
       DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
       prod.setText(model.getValueAt(selectedrow,0).toString());
       num.setText(model.getValueAt(selectedrow,1).toString());
       gpe.setText(model.getValueAt(selectedrow,3).toString());
       ets.setText(model.getValueAt(selectedrow,1).toString());
       impu.setSelectedItem(model.getValueAt(selectedrow,2).toString());
       k=1;
    }//GEN-LAST:event_jTable1MouseClicked

    private void indiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_indiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
     
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(controle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(controle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(controle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(controle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transfusang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JCheckBox auto;
    private javax.swing.ButtonGroup buttonGroup1;
    public static com.toedter.calendar.JDateChooser datee;
    private javax.swing.JLabel ep;
    private javax.swing.JTextField ets;
    private javax.swing.JPanel fcontrole;
    private javax.swing.JTextField gpe;
    public static javax.swing.JTextField heure;
    private javax.swing.JComboBox<String> impu;
    public static javax.swing.JTextField indi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JMenu jMenu5;
    public static javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JTextField num;
    private javax.swing.JLabel pa;
    private javax.swing.JTextField prod;
    public static javax.swing.JTextField transfu;
    public static javax.swing.JTextField vol;
    // End of variables declaration//GEN-END:variables
}
