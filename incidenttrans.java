package transfusionsanguine;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;



/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author DELL
 */
public class incidenttrans extends javax.swing.JFrame {

    Connection conn ;
    PreparedStatement pstsel, pst;
    ResultSet rs;
   
  
    public incidenttrans() throws ParseException {
        initComponents();
        conn = Transfusion.conn();
        jMenu7.setText(login1.username);
        afficher(declaration.idpatient.getText(),declaration.episode.getText());
        pa.setText(declaration.idpatient.getText());
        ep.setText(declaration.episode.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    
     private void afficher(String id,String ep) throws ParseException{
      try{
          String sql ="select * from IncidentTrans where idpatient=? and episode =? ";
          pst = conn.prepareStatement(sql);
          pst.setString(1,id );
          pst.setString(2,ep );
          rs = pst.executeQuery();
          if(rs.next()){
              if(rs.getString("PendantTrans").equals("Oui")){pen.setSelected(true);}
              
              if(rs.getString("ApresTransf").equals("Oui")){apre.setSelected(true);}
             
            String dateStr = rs.getString("Delai");
            DateFormat datef = new SimpleDateFormat("dd/MM/yyyy");
            Date d = datef.parse(dateStr);
            delai.setDate(d);
              String T = rs.getString("Manifestations");
              String[] TB =T.split(",");
               if(rs.getString("Gravitee").equals("absence de menace vitale immédiate ou à long terme (frissons,hyperthermie,urticaire...)")){ab.setSelected(true);}
                  else if(rs.getString("Gravitee").equals("morbidité à long terme (maladies virales,paludisme...)")){mor.setSelected(true);}
                  else if(rs.getString("Gravitee").equals("menace vitale immédiate (état de choc,ddétresse respiratoire...)")){mena.setSelected(true);}
                  else if(rs.getString("Gravitee").equals("décès")){dec.setSelected(true);}
              for (String TL : TB){
                  if(TL.equals("Agitation")){ag.setSelected(true);}
                  else if(TL.equals("Angoisse")){ang.setSelected(true);}
                  else if(TL.equals("Choc")){choc.setSelected(true);}
                  else if(TL.equals("Douleur")){dou.setSelected(true); pre.setText(rs.getString("autres_d"));}
                  else if(TL.equals("Dyspnée")){dys.setSelected(true);}
                  else if(TL.equals("Fièvre")){fi.setSelected(true);}
                  else if(TL.equals("Frisson")){fri.setSelected(true);}
                  else if(TL.equals("Hémoglobinurie")){hemo.setSelected(true);}
                  else if(TL.equals("Hypo TA")){hypo.setSelected(true);}
                  else if(TL.equals("Ictère")){ict.setSelected(true);}
                  else if(TL.equals("Malaise")){mal.setSelected(true);}
                  else if(TL.equals("vomissements")){nau.setSelected(true);}
                  else if(TL.equals("OAP")){oap.setSelected(true);}
                  else if(TL.equals("Oligo-anurie")){oli.setSelected(true);}
                  else if(TL.equals("S. hémorragique diffus")){shemo.setSelected(true);}
                  else if(TL.equals("Sueurs")){su.setSelected(true);}
                  else if(TL.equals("Urticaire")){ur.setSelected(true);}
                 }
              if(rs.getString("autres")!=null){autre.setText(rs.getString("autres"));}
              
              
             
          }
       }     
       catch(SQLException e){
               JOptionPane.showMessageDialog(null,e);
                  }
       
     
     }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        cho1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jToggleButton2 = new javax.swing.JToggleButton();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        doul = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        cho = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        an = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        dys = new javax.swing.JCheckBox();
        ang = new javax.swing.JCheckBox();
        choc = new javax.swing.JCheckBox();
        dou = new javax.swing.JCheckBox();
        dec = new javax.swing.JCheckBox();
        autre = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        fi = new javax.swing.JCheckBox();
        jLabel59 = new javax.swing.JLabel();
        fri = new javax.swing.JCheckBox();
        jLabel60 = new javax.swing.JLabel();
        hemo = new javax.swing.JCheckBox();
        jLabel61 = new javax.swing.JLabel();
        hypo = new javax.swing.JCheckBox();
        jLabel62 = new javax.swing.JLabel();
        mal = new javax.swing.JCheckBox();
        jLabel63 = new javax.swing.JLabel();
        nau = new javax.swing.JCheckBox();
        jLabel64 = new javax.swing.JLabel();
        oap = new javax.swing.JCheckBox();
        jLabel65 = new javax.swing.JLabel();
        oli = new javax.swing.JCheckBox();
        jLabel66 = new javax.swing.JLabel();
        shemo = new javax.swing.JCheckBox();
        jLabel67 = new javax.swing.JLabel();
        ur = new javax.swing.JCheckBox();
        jLabel68 = new javax.swing.JLabel();
        ict = new javax.swing.JCheckBox();
        jLabel69 = new javax.swing.JLabel();
        su = new javax.swing.JCheckBox();
        p = new javax.swing.JLabel();
        pre = new javax.swing.JTextField();
        delai = new com.toedter.calendar.JDateChooser();
        ag = new javax.swing.JCheckBox();
        apre = new javax.swing.JCheckBox();
        ab = new javax.swing.JCheckBox();
        mor = new javax.swing.JCheckBox();
        mena = new javax.swing.JCheckBox();
        pen = new javax.swing.JCheckBox();
        jLabel71 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pa = new javax.swing.JLabel();
        ep = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        cho1.setBackground(new java.awt.Color(204, 228, 232));
        cho1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Microsoft Himalaya", 1, 35)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Incident Transfusionnel ");
        cho1.add(jLabel1);
        jLabel1.setBounds(40, 40, 480, 38);

        jLabel34.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel34.setText("Délai :");
        cho1.add(jLabel34);
        jLabel34.setBounds(840, 120, 60, 20);

        jToggleButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jToggleButton2.setText("Enregistrer ");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        cho1.add(jToggleButton2);
        jToggleButton2.setBounds(1230, 740, 170, 60);

        jLabel44.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel44.setText("menace vitale immédiate (état de choc,ddétresse respiratoire...)");
        cho1.add(jLabel44);
        jLabel44.setBounds(200, 250, 480, 20);

        jLabel45.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel45.setText("après la transfusion sanguine ");
        cho1.add(jLabel45);
        jLabel45.setBounds(560, 120, 210, 20);

        jLabel46.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel46.setText("pendant la transfusion sanguine ");
        cho1.add(jLabel46);
        jLabel46.setBounds(250, 120, 230, 20);

        jLabel47.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel47.setText("décès");
        cho1.add(jLabel47);
        jLabel47.setBounds(200, 280, 360, 20);

        doul.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        doul.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        doul.setText("Douleur");
        cho1.add(doul);
        doul.setBounds(70, 500, 60, 20);

        jLabel49.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel49.setText("morbidité à long terme (maladies virales,paludisme...)");
        cho1.add(jLabel49);
        jLabel49.setBounds(200, 220, 390, 20);

        jLabel50.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel50.setText("absence de menace vitale immédiate ou à long terme (frissons,hyperthermie,urticaire...)");
        cho1.add(jLabel50);
        jLabel50.setBounds(200, 190, 640, 20);

        jLabel51.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel51.setText("Gravité de l'incident transfusionnel :");
        cho1.add(jLabel51);
        jLabel51.setBounds(70, 160, 360, 20);

        jLabel52.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel52.setText("Manifestations cliniques et/ou biologiques :");
        cho1.add(jLabel52);
        jLabel52.setBounds(70, 380, 360, 20);

        cho.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        cho.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        cho.setText("Choc");
        cho1.add(cho);
        cho.setBounds(70, 470, 60, 20);

        jLabel54.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel54.setText("Préciser :");
        cho1.add(jLabel54);
        jLabel54.setBounds(190, 500, 70, 20);

        jLabel55.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel55.setText("Autres manifestations (préciser) :");
        cho1.add(jLabel55);
        jLabel55.setBounds(70, 650, 240, 30);

        an.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        an.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        an.setText("Angoisse");
        cho1.add(an);
        an.setBounds(70, 440, 80, 20);

        jLabel57.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel57.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel57.setText("Agitation");
        cho1.add(jLabel57);
        jLabel57.setBounds(70, 410, 80, 20);
        cho1.add(dys);
        dys.setBounds(150, 530, 20, 25);

        ang.setText("OUI");
        cho1.add(ang);
        ang.setBounds(150, 440, 20, 27);

        choc.setText("OUI");
        cho1.add(choc);
        choc.setBounds(150, 470, 20, 27);

        dou.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                douActionPerformed(evt);
            }
        });
        cho1.add(dou);
        dou.setBounds(150, 500, 20, 25);

        buttonGroup2.add(dec);
        cho1.add(dec);
        dec.setBounds(170, 280, 20, 25);
        cho1.add(autre);
        autre.setBounds(310, 650, 150, 29);

        jLabel58.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel58.setText("Fièvre");
        cho1.add(jLabel58);
        jLabel58.setBounds(490, 410, 80, 20);
        cho1.add(fi);
        fi.setBounds(620, 410, 40, 25);

        jLabel59.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel59.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel59.setText("Frisson");
        cho1.add(jLabel59);
        jLabel59.setBounds(490, 440, 80, 20);
        cho1.add(fri);
        fri.setBounds(620, 440, 40, 25);

        jLabel60.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel60.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel60.setText("Hémoglobinurie");
        cho1.add(jLabel60);
        jLabel60.setBounds(490, 470, 110, 20);
        cho1.add(hemo);
        hemo.setBounds(620, 470, 30, 25);

        jLabel61.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel61.setText("Hypo TA");
        cho1.add(jLabel61);
        jLabel61.setBounds(490, 500, 100, 20);

        hypo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hypoActionPerformed(evt);
            }
        });
        cho1.add(hypo);
        hypo.setBounds(620, 500, 40, 25);

        jLabel62.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel62.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel62.setText("Malaise");
        cho1.add(jLabel62);
        jLabel62.setBounds(490, 560, 70, 20);
        cho1.add(mal);
        mal.setBounds(620, 560, 60, 25);

        jLabel63.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel63.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel63.setText("Nausées/vomissements");
        cho1.add(jLabel63);
        jLabel63.setBounds(800, 410, 170, 20);
        cho1.add(nau);
        nau.setBounds(1000, 410, 30, 25);

        jLabel64.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel64.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel64.setText("OAP");
        cho1.add(jLabel64);
        jLabel64.setBounds(800, 440, 80, 20);
        cho1.add(oap);
        oap.setBounds(1000, 440, 25, 25);

        jLabel65.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel65.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel65.setText("Oligo-anurie");
        cho1.add(jLabel65);
        jLabel65.setBounds(800, 470, 110, 20);
        cho1.add(oli);
        oli.setBounds(1000, 470, 30, 25);

        jLabel66.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel66.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel66.setText("S. hémorragique diffus");
        cho1.add(jLabel66);
        jLabel66.setBounds(800, 500, 170, 20);

        shemo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shemoActionPerformed(evt);
            }
        });
        cho1.add(shemo);
        shemo.setBounds(1000, 500, 30, 25);

        jLabel67.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel67.setText("Urticaire");
        cho1.add(jLabel67);
        jLabel67.setBounds(800, 560, 70, 20);
        cho1.add(ur);
        ur.setBounds(1000, 560, 40, 25);

        jLabel68.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel68.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel68.setText("Ictère");
        cho1.add(jLabel68);
        jLabel68.setBounds(490, 530, 70, 20);
        cho1.add(ict);
        ict.setBounds(620, 530, 30, 25);

        jLabel69.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel69.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel69.setText("Sueurs");
        cho1.add(jLabel69);
        jLabel69.setBounds(800, 530, 70, 20);
        cho1.add(su);
        su.setBounds(1000, 530, 40, 25);

        p.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        p.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        p.setText("Dyspnée");
        cho1.add(p);
        p.setBounds(70, 530, 70, 20);

        pre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preActionPerformed(evt);
            }
        });
        cho1.add(pre);
        pre.setBounds(270, 500, 71, 29);
        cho1.add(delai);
        delai.setBounds(890, 120, 130, 29);

        ag.setText("OUI");
        ag.setToolTipText("");
        cho1.add(ag);
        ag.setBounds(150, 410, 20, 27);

        buttonGroup1.add(apre);
        cho1.add(apre);
        apre.setBounds(770, 120, 20, 25);

        buttonGroup2.add(ab);
        ab.setSelected(true);
        cho1.add(ab);
        ab.setBounds(170, 190, 20, 25);

        buttonGroup2.add(mor);
        cho1.add(mor);
        mor.setBounds(170, 220, 20, 25);

        buttonGroup2.add(mena);
        cho1.add(mena);
        mena.setBounds(170, 250, 20, 25);

        buttonGroup1.add(pen);
        pen.setSelected(true);
        cho1.add(pen);
        pen.setBounds(480, 120, 20, 25);

        jLabel71.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel71.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel71.setText("Incident survenu :");
        cho1.add(jLabel71);
        jLabel71.setBounds(70, 120, 130, 20);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel2.setText("Patient:");
        cho1.add(jLabel2);
        jLabel2.setBounds(1170, 50, 60, 21);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel3.setText("Episode:");
        cho1.add(jLabel3);
        jLabel3.setBounds(1340, 50, 60, 21);

        pa.setText("jLabel4");
        cho1.add(pa);
        pa.setBounds(1230, 50, 100, 21);

        ep.setText("jLabel5");
        cho1.add(ep);
        ep.setBounds(1410, 50, 100, 21);

        jMenu5.setText("Quitter");
        jMenu5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenu5.setMargin(new java.awt.Insets(5, 6, 5, 10));
        jMenu5.setMaximumSize(new java.awt.Dimension(600, 32767));
        jMenu5.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                jMenu5MenuSelected(evt);
            }
        });
        jMenuBar1.add(jMenu5);

        jMenu8.setText("Utilisateur :");
        jMenu8.setEnabled(false);
        jMenu8.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenuBar1.add(jMenu8);

        jMenu7.setText("jMenu7");
        jMenu7.setEnabled(false);
        jMenu7.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jMenu7.setMargin(new java.awt.Insets(3, 6, 3, 5));
        jMenu7.setMaximumSize(new java.awt.Dimension(500, 32767));
        jMenuBar1.add(jMenu7);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cho1, javax.swing.GroupLayout.DEFAULT_SIZE, 1536, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cho1, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     public void insert(String id,String ep){
        String  pendant;
        String apres;
        Date date = delai.getDate();
        SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");
        String date1= f.format(date);
        String gravite=null;
        String manifest="";
        String autredouleur=null;
        if(pen.isSelected()){
            pendant="Oui";
        }else{ pendant="Non";}
        if(apre.isSelected()){
            apres="Oui";
        }else{apres="Non";}
        if(ab.isSelected()){
            gravite="absence de menace vitale immédiate ou à long terme (frissons,hyperthermie,urticaire...)";
        }
        else if(mor.isSelected()){
            gravite="morbidité à long terme (maladies virales,paludisme...)";
        }
        else if(mena.isSelected()){
            gravite="menace vitale immédiate (état de choc,ddétresse respiratoire...)";
        }
        else if(dec.isSelected()){
            gravite="décès";
        }
        
        
        if(ag.isSelected()){
            manifest+="Agitation"+",";
        }
        if(ang.isSelected()){
            manifest+="Angoisse"+",";
        }
        if(choc.isSelected()){
            manifest+="Choc"+",";
        }
        if(dou.isSelected()){
            manifest+="Douleur ,";
            autredouleur=pre.getText();
             
        }
        if(dys.isSelected()){
            manifest+="Dyspnée"+",";
        }
        if(fi.isSelected()){
            manifest+="Fièvre"+",";
        }
        if(fri.isSelected()){
            manifest+="Frisson"+",";
        }
         if(hemo.isSelected()){
            manifest+="Hémoglobinurie"+",";
        }
        if(hypo.isSelected()){
            manifest+="Hypo TA"+",";
        }
        if(ict.isSelected()){
            manifest+="Ictère"+",";
        }
        if(mal.isSelected()){
            manifest+="Malaise"+",";
        }
        if(nau.isSelected()){
            manifest+="Nausées/vomissements"+",";
        }
        if(oap.isSelected()){
            manifest+="OAP"+",";
        }
         if(oli.isSelected()){
            manifest+="Oligo-anurie"+",";
        }
        if(shemo.isSelected()){
            manifest+="S. hémorragique diffus"+",";
        }
        if(su.isSelected()){
            manifest+="Sueurs"+",";
        }
        if(ur.isSelected()){
            manifest+="Urticaire"+",";
        }
        
        
        try{
           String sql ="insert into IncidentTrans (PendantTrans,ApresTransf,Delai,Gravitee,Manifestations,idpatient,episode,autres_d,autres) values (?,?,?,?,?,?,?,?,?) ";
          pst = conn.prepareStatement(sql);
          pst.setString(1,pendant);
          pst.setString(2,apres);
          pst.setString(3,date1);
          pst.setString(4,gravite);
          pst.setString(5,manifest);
          pst.setString(6,id);
          pst.setString(7,ep);
          pst.setString(8,autredouleur);
          pst.setString(9,autre.getText());
          pst.execute();

         
          
              JOptionPane.showMessageDialog(null,"enregistrement effectué avec succés");
     
       }     
       catch(SQLException e){
               JOptionPane.showMessageDialog(null,e);
                  }     
     
     }
     
     
     public void update(){
        String  pendant;
        String apres;
        Date date = delai.getDate();
        SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");
        String date1= f.format(date);
        String gravite=null;
        String manifest="";
        String autredouleur=null;
        if(pen.isSelected()){
            pendant="Oui";
        }else{ pendant="Non";}
        if(apre.isSelected()){
            apres="Oui";
        }else{apres="Non";}
        if(ab.isSelected()){
            gravite="absence de menace vitale immédiate ou à long terme (frissons,hyperthermie,urticaire...)";
        }
        else if(mor.isSelected()){
            gravite="morbidité à long terme (maladies virales,paludisme...)";
        }
        else if(mena.isSelected()){
            gravite="menace vitale immédiate (état de choc,ddétresse respiratoire...)";
        }
        else if(dec.isSelected()){
            gravite="décès";
        }
        
        
        if(ag.isSelected()){
            manifest+="Agitation"+",";
        }
        if(ang.isSelected()){
            manifest+="Angoisse"+",";
        }
        if(choc.isSelected()){
            manifest+="Choc"+",";
        }
        if(dou.isSelected()){
            manifest+="Douleur ,";
            autredouleur=pre.getText(); 
        }
        if(dys.isSelected()){
            manifest+="Dyspnée"+",";
        }
        if(fi.isSelected()){
            manifest+="Fièvre"+",";
        }
        if(fri.isSelected()){
            manifest+="Frisson"+",";
        }
         if(hemo.isSelected()){
            manifest+="Hémoglobinurie"+",";
        }
        if(hypo.isSelected()){
            manifest+="Hypo TA"+",";
        }
        if(ict.isSelected()){
            manifest+="Ictère"+",";
        }
        if(mal.isSelected()){
            manifest+="Malaise"+",";
        }
        if(nau.isSelected()){
            manifest+="Nausées/vomissements"+",";
        }
        if(oap.isSelected()){
            manifest+="OAP"+",";
        }
         if(oli.isSelected()){
            manifest+="Oligo-anurie"+",";
        }
        if(shemo.isSelected()){
            manifest+="S. hémorragique diffus"+",";
        }
        if(su.isSelected()){
            manifest+="Sueurs"+",";
        }
        if(ur.isSelected()){
            manifest+="Urticaire"+",";
        }
        
        
        try{
          String sql ="update IncidentTrans set PendantTrans=?,ApresTransf=?,Delai=?,Gravitee=?,Manifestations=?,autres_d=?,autres=? where idpatient = ? and episode=? ";
          pst = conn.prepareStatement(sql);
          pst.setString(1,pendant);
          pst.setString(2,apres);
          pst.setString(3,date1);
          pst.setString(4,gravite);
          pst.setString(5,manifest);
          pst.setString(6,autredouleur);
          pst.setString(7,autre.getText());
          pst.setString(8,pa.getText());
          pst.setString(9,ep.getText());
          pst.execute();
         
          
              JOptionPane.showMessageDialog(null,"enregistrement effectué avec succés");
     
       }     
       catch(SQLException e){
               JOptionPane.showMessageDialog(null,e);
                  }     
     
     }
    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        if(delai.getDate()==null){JOptionPane.showMessageDialog(null,"Délai non rempli !!!");}
        else{
        try{
          String sqlsel ="select * from IncidentTrans where idpatient = ? and episode=? ";
          pstsel = conn.prepareStatement(sqlsel);
          pstsel.setString(1,declaration.idpatient.getText());
          pstsel.setString(2,declaration.episode.getText());
          rs=pstsel.executeQuery();
         
          if(!rs.next()){insert(declaration.idpatient.getText(),declaration.episode.getText());}
          else{update();}
          
          
          
          
         }
        catch(SQLException e){
               JOptionPane.showMessageDialog(null,e);
                  }}
          
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void douActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_douActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_douActionPerformed

    private void hypoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hypoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hypoActionPerformed

    private void shemoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shemoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shemoActionPerformed

    private void preActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_preActionPerformed

    private void jMenu5MenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_jMenu5MenuSelected
        declaration d=new declaration();
        d.setVisible(true);
        this.hide();
    }//GEN-LAST:event_jMenu5MenuSelected

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
     
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(controle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(controle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(controle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(controle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new incidenttrans().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(incidenttrans.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ab;
    private javax.swing.JCheckBox ag;
    private javax.swing.JLabel an;
    private javax.swing.JCheckBox ang;
    private javax.swing.JCheckBox apre;
    private javax.swing.JTextField autre;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel cho;
    private javax.swing.JPanel cho1;
    private javax.swing.JCheckBox choc;
    private javax.swing.JCheckBox dec;
    private com.toedter.calendar.JDateChooser delai;
    private javax.swing.JCheckBox dou;
    private javax.swing.JLabel doul;
    private javax.swing.JCheckBox dys;
    private javax.swing.JLabel ep;
    private javax.swing.JCheckBox fi;
    private javax.swing.JCheckBox fri;
    private javax.swing.JCheckBox hemo;
    private javax.swing.JCheckBox hypo;
    private javax.swing.JCheckBox ict;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JMenu jMenu5;
    public static javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JCheckBox mal;
    private javax.swing.JCheckBox mena;
    private javax.swing.JCheckBox mor;
    private javax.swing.JCheckBox nau;
    private javax.swing.JCheckBox oap;
    private javax.swing.JCheckBox oli;
    private javax.swing.JLabel p;
    private javax.swing.JLabel pa;
    private javax.swing.JCheckBox pen;
    private javax.swing.JTextField pre;
    private javax.swing.JCheckBox shemo;
    private javax.swing.JCheckBox su;
    private javax.swing.JCheckBox ur;
    // End of variables declaration//GEN-END:variables
}
